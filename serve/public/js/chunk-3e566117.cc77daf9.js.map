{"version":3,"sources":["webpack:///./src/views-admin/Dashboard.vue?ff5f","webpack:///src/views-admin/Dashboard.vue","webpack:///./src/views-admin/Dashboard.vue?062a","webpack:///./src/views-admin/Dashboard.vue","webpack:///./src/views-admin/Dashboard.vue?c18d"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","attrs","component"],"mappings":"gJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACG,YAAY,qCAAqC,CAACH,EAAG,MAAM,CAACG,YAAY,OAAO,CAACH,EAAG,MAAM,CAACG,YAAY,WAAWC,MAAM,CAAC,GAAK,SAASJ,EAAG,MAAM,CAACG,YAAY,WAAWC,MAAM,CAAC,GAAK,eCSvS,GACE,KADF,WAEI,MAAJ,CACM,IAAN,EACM,WAAN,IAGE,QAAF,CACI,UADJ,WACM,IAAN,OAEA,qDACM,EAAN,cACM,OAAN,kBAEM,IAAN,KACA,kBACA,iBACA,GACQ,MAAR,CACU,KAAV,aAEQ,QAAR,CACU,MAAV,EACU,QAAV,QAEQ,MAAR,CACU,KAAV,OACU,SAAV,IACU,IAAV,EACU,IAAV,EACU,UAAV,CACY,MAAZ,IAGQ,MAAR,CACU,KAAV,QACU,IAAV,IACU,UAAV,CACY,MAAZ,IAGQ,OAAR,CACA,CACU,KAAV,KACU,KAAV,OACU,YAAV,EACU,gBAAV,EACU,KAAV,KAIA,IACA,WAEM,aAAN,WACQ,IACR,OACU,EAAV,0BACU,EAAV,2BAIQ,EAAR,cACQ,EAAR,yBACQ,EAAR,eACA,MAEI,UA5DJ,WA4DM,IAAN,OAEA,qDACM,OAAN,sCACQ,EAAR,YAEM,EAAN,cAGM,IAAN,KACA,KACA,kBACA,iBACA,OACA,GACQ,MAAR,CACU,KAAV,eAEQ,QAAR,CACU,MAAV,EACU,QAAV,QAEQ,MAAR,CACU,KAAV,OACU,SAAV,IACU,IAAV,EACU,IAAV,EACU,UAAV,CACY,MAAZ,IAGQ,MAAR,CACA,CACU,KAAV,QACU,IAAV,EACU,UAAV,CACY,MAAZ,IAGA,CACU,KAAV,QACU,IAAV,EACU,UAAV,CACY,MAAZ,KAIQ,OAAR,CACA,CACU,KAAV,SACU,KAAV,OACU,YAAV,EACU,gBAAV,EACU,KAAV,GAEA,CACU,KAAV,SACU,KAAV,OACU,YAAV,EACU,gBAAV,EACU,KAAV,KAIA,IACA,WAEM,aAAN,WACQ,IACR,OACU,EAAV,0BACU,EAAV,2BAGQ,EAAR,wCACQ,EAAR,wCACQ,EAAR,cACQ,EAAR,mCACQ,EAAR,mCACQ,EAAR,eACA,MAEI,gBA9IJ,WA8IM,IAAN,OACM,GAAN,gBAOM,KAAN,oBAAQ,GAAR,kBACM,KAAN,+CACQ,EAAR,iBACQ,EAAR,gCATQ,IAAR,yBACU,EAAV,kBACU,aAAV,KACA,MASI,cA5JJ,WA6JM,KAAN,4CACQ,GAAR,2BAIE,QAzKF,WA0KI,KAAJ,YACI,KAAJ,aAEE,UA7KF,WA8KI,KAAJ,mBAEE,YAhLF,WAiLI,KAAJ,kBC3LmV,I,wBCQ/UC,EAAY,eACd,EACAX,EACAQ,GACA,EACA,KACA,WACA,MAIa,aAAAG,E,6CCnBf,yBAAsiB,EAAG","file":"js/chunk-3e566117.cc77daf9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dashboard container-md no-gutters\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\",attrs:{\"id\":\"cpu\"}}),_c('div',{staticClass:\"col-md-6\",attrs:{\"id\":\"mem\"}})])])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"dashboard container-md no-gutters\">\r\n        <div class=\"row\">\r\n            <div id=\"cpu\" class=\"col-md-6\"></div>\r\n            <div id=\"mem\" class=\"col-md-6\"></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            cpu: 0,\r\n            MenPercent: 0\r\n        };\r\n    },\r\n    methods: {\r\n        createCpu() {\r\n            // 基于准备好的dom，初始化echarts实例\r\n            var myChart = this.$echarts.init(document.getElementById(\"cpu\"));\r\n            myChart.showLoading();\r\n            window.onresize = myChart.resize;\r\n            // 指定图表的配置项和数据\r\n            let data = [];\r\n            let max = Date.now() + 18000;\r\n            let min = Date.now() + 1000;\r\n            var option = {\r\n                title: {\r\n                    text: \"cpu % 利用率\"\r\n                },\r\n                tooltip: {\r\n                    show: true,\r\n                    trigger: \"axis\"\r\n                },\r\n                xAxis: {\r\n                    type: \"time\",\r\n                    interval: 6000,\r\n                    max: max,\r\n                    min,\r\n                    splitLine: {\r\n                        show: true\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    type: \"value\",\r\n                    max: 100,\r\n                    splitLine: {\r\n                        show: true\r\n                    }\r\n                },\r\n                series: [\r\n                    {\r\n                        name: \"% \",\r\n                        type: \"line\",\r\n                        showSymbol: false,\r\n                        hoverAnimation: false,\r\n                        data\r\n                    }\r\n                ]\r\n            };\r\n            let xtimes = 0;\r\n            let date = Date.now();\r\n            // 使用刚指定的配置项和数据显示图表。\r\n            setInterval(() => {\r\n                xtimes++;\r\n                if (xtimes > 18) {\r\n                    option.xAxis.max = option.xAxis.max + 1000;\r\n                    option.xAxis.min = option.xAxis.min + 1000;\r\n                    // data.splice(0, 1);\r\n                }\r\n\r\n                myChart.hideLoading();\r\n                data.push([Date.now(), this.cpu]);\r\n                myChart.setOption(option);\r\n            }, 1000);\r\n        },\r\n        createMem() {\r\n            // 基于准备好的dom，初始化echarts实例\r\n            var myChart = this.$echarts.init(document.getElementById(\"mem\"));\r\n            window.addEventListener(\"resize\", () => {\r\n                myChart.resize();\r\n            });\r\n            myChart.showLoading();\r\n\r\n            // 指定图表的配置项和数据\r\n            let totalData = [];\r\n            let useData = [];\r\n            let max = Date.now() + 18000;\r\n            let min = Date.now() + 1000;\r\n            let ymax = null;\r\n            var option = {\r\n                title: {\r\n                    text: \"进程内存 MB 使用率\"\r\n                },\r\n                tooltip: {\r\n                    show: true,\r\n                    trigger: \"axis\"\r\n                },\r\n                xAxis: {\r\n                    type: \"time\",\r\n                    interval: 6000,\r\n                    max: max,\r\n                    min,\r\n                    splitLine: {\r\n                        show: true\r\n                    }\r\n                },\r\n                yAxis: [\r\n                    {\r\n                        type: \"value\",\r\n                        max: ymax,\r\n                        splitLine: {\r\n                            show: true\r\n                        }\r\n                    },\r\n                    {\r\n                        type: \"value\",\r\n                        max: ymax,\r\n                        splitLine: {\r\n                            show: true\r\n                        }\r\n                    }\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: \"MB 总大小\",\r\n                        type: \"line\",\r\n                        showSymbol: false,\r\n                        hoverAnimation: false,\r\n                        data: totalData\r\n                    },\r\n                    {\r\n                        name: \"MB 已使用\",\r\n                        type: \"line\",\r\n                        showSymbol: false,\r\n                        hoverAnimation: false,\r\n                        data: useData\r\n                    }\r\n                ]\r\n            };\r\n            let xtimes = 0;\r\n            let date = Date.now();\r\n            // 使用刚指定的配置项和数据显示图表。\r\n            setInterval(() => {\r\n                xtimes++;\r\n                if (xtimes > 18) {\r\n                    option.xAxis.max = option.xAxis.max + 1000;\r\n                    option.xAxis.min = option.xAxis.min + 1000;\r\n                    // data.splice(0, 1);\r\n                }\r\n                option.yAxis[0].max = Math.ceil(this.MenPercent[0]);\r\n                option.yAxis[1].max = Math.ceil(this.MenPercent[0]);\r\n                myChart.hideLoading();\r\n                totalData.push([Date.now(), this.MenPercent[0]]);\r\n                useData.push([Date.now(), this.MenPercent[1]]);\r\n                myChart.setOption(option);\r\n            }, 1000);\r\n        },\r\n        addListenSocket() {\r\n            if (!this.$socket.id) {\r\n                let timeOut = setTimeout(() => {\r\n                    this.addListenSocket();\r\n                    clearTimeout(timeOut);\r\n                }, 500);\r\n                return;\r\n            }\r\n            this.$socket.emit(\"cpu\", { id: this.$socket.id });\r\n            this.$socket.on(this.$socket.id + \"_cpu\", msg => {\r\n                this.cpu = msg.CpuPercent;\r\n                this.MenPercent = msg.MenPercent;\r\n            });\r\n        },\r\n        removeListent() {\r\n            this.$socket.emit(this.$socket.id + \"_cpu_remove\", {\r\n                id: this.$socket.id + \"_cpu\"\r\n            });\r\n        }\r\n    },\r\n    mounted() {\r\n        this.createCpu();\r\n        this.createMem();\r\n    },\r\n    activated() {\r\n        this.addListenSocket();\r\n    },\r\n    deactivated() {\r\n        this.removeListent();\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#cpu,\r\n#mem {\r\n    min-height: 250px;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=5a8dbf0a&scoped=true&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Dashboard.vue?vue&type=style&index=0&id=5a8dbf0a&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5a8dbf0a\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=style&index=0&id=5a8dbf0a&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=style&index=0&id=5a8dbf0a&lang=scss&scoped=true&\""],"sourceRoot":""}